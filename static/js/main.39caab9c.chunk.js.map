{"version":3,"sources":["Components/SearchBox.js","Components/User.js","Components/ProfileList.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","User","username","name","email","picture","location","alt","src","trigger","ProfileList","profiles","map","profile","App","fetchData","fetch","then","response","json","parsedJSON","results","user","first","last","login","large","city","state","country","setState","isLoading","catch","e","console","log","onSearchChange","event","searchfield","target","value","handleChange","handleSubmit","AlphabeticalOrder","this","sort","a","b","filteredProfiles","filter","toLowerCase","includes","id","onClick","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39caab9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div>\r\n            <input \r\n            className='search-box'\r\n            type='search'\r\n            placeholder='Search users'\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport Collapsible from 'react-collapsible';\r\nimport './Collapsible.css';\r\n\r\nconst User = ({ username, name, email, picture, location }) => {\r\nreturn(\r\n    <div key={username}> \r\n    <img alt='ProfilePicture' src={picture}/> \r\n    <div> \r\n    <h3>{username}</h3>\r\n    <p>{name}</p>\r\n    <Collapsible trigger='More info'>\r\n    <p>{email}</p>  \r\n    <p>{location}</p>\r\n    </Collapsible>\r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport User from './User';\r\nimport '../Containers/App.css';\r\n\r\n    const ProfileList = ({ profiles }) => {\r\n        return (\r\n            <div className='grid-container'>\r\n            {\r\n            profiles.map(profile => {\r\n                const {username, name, picture, email, location} = profile;\r\n                return <User\r\n                username={username}\r\n                name={name}\r\n                picture={picture}\r\n                email={email}\r\n                location={location}/>\r\n                })\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default ProfileList;","import { Component } from 'react';\nimport './App.css';\nimport SearchBox from '../Components/SearchBox';\nimport ProfileList from '../Components/ProfileList';\nimport '../Components/Select.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n    isLoading: true,\n    profiles: [],\n    searchfield: '',\n    value: ''\n    }\n  }\n\n componentDidMount() {\n   this.fetchData();\n }\n\nfetchData = () => {\n    fetch('https://randomuser.me/api/?results=50')\n    .then(response => response.json())\n    .then(parsedJSON => parsedJSON.results.map(user => (\n      {\n        name: `${user.name.first} ${user.name.last}`,\n        username: `${user.login.username}`,\n        picture : `${user.picture.large}`,\n        email: `${user.email}`,\n        location: `${user.location.city}, ${user.location.state}, ${user.location.country}`\n      }\n    )))\n    .then(profiles => this.setState({\n      profiles,\n      isLoading: false\n    }))\n    .catch(e => console.log(e))\n    }\n\n    AlphabeticalOrder() {\n    const { profiles } = this.state;\n      profiles.sort(function(a, b){\n        if(a.username < b.username) { return -1; }\n        if(a.username > b.username) { return 1; }\n        return 0;\n    })\n    }\n\n    onSearchChange = (event) => {\n      this.setState({ searchfield: event.target.value })\n    }\n\n    handleChange = (event) => {\n      this.setState({ value: event.target.value }) \n    }\n\n    handleSubmit = () => { \n      if (\n        this.state.value = 'Alphabetical'\n        ) return this.AlphabeticalOrder();\n    }\n\nrender() {\n  this.handleSubmit();\n  const { searchfield, isLoading, profiles } = this.state;\n  const filteredProfiles = profiles.filter(profile => {\n    return profile.username.toLowerCase().includes(searchfield.toLowerCase());\n  });\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>Welcome!</h1>\n      </header>\n      <div>\n        <div className='flex'>\n          <SearchBox searchChange={this.onSearchChange}/>\n          <select className='select' name='Order' id='order-select' onChange={this.handleChange}>\n            <option value=''>Select order:</option>\n            <option value='Alphabetical'>Alphabetical</option>\n          </select>\n          <button className='Button' type='button' onClick={this.fetchData}>Generate</button>\n        </div>\n          {\n            !isLoading && profiles.length > 0 ? \n            <ProfileList profiles={filteredProfiles}/> : \n            <h1>Loading...</h1>\n          } \n      </div>\n    </div>\n  );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}